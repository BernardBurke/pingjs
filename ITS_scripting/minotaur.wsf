<job id="minotaur.wsf">
<script language="VBScript" src="StaticDataDefinitions7.vbs"/>
<script language="VBScript" src="DynamicDataDefinitions7.vbs"/>
<script language="VBScript" src="CommonFunctionsLibrary7.vbs"/>
<script language="VBScript">
' ============================================================================== 
' Script.........: [minotaur.wsf.wsf] 
' Author.Email...: [me@benburke.dev] 
' Version........: 7.0 
' Date Written...........: 29/10/2021 8:47:02 AM
'
' One Line Description: Run some basic confidence tests from a client desktop
' 			
' 
' For Detailed Description and revision history, go to end of file 
' (this saves the interpreter from 'reading' the comments.


Option Explicit 
On Error Goto 0 


' -------------------------------------------------------------------------- 
'  Declare Constants 
' -------------------------------------------------------------------------- 
' -------------------------------------------------------------------------- 
'  Declare Variables 
' -------------------------------------------------------------------------- 

dim ping_target ' hostname or ip 
dim objWMIService ' created and destroyed in main()
dim ping_loop_count ' number of pings to fire 
dim log_file_path ' path to log'
dim log_file_name ' constructed with context user etc
dim log_file_full_name ' as per above
dim append_results_to_log ' boolean, off by default
dim downloadURL ' for http get download
dim downloadFilePath ' as in downloadURL target

' -------------------------------------------------------------------------- 
'  Do something 
' -------------------------------------------------------------------------- 


initialise

log_file_path = GetProcessEnvironmentVariable("TEMP")


CommandLineArgs



Main



sub Main

	dim average_value, this_record, get_status, get_milliseconds, log_status, Milliseconds


	Set objWMIService = GetObject("winmgmts:\\.\root\cimv2")

	if ping_target = "" then 
		message "No ping_target specified"
		exit sub
	else 
		message "ping_target " & ping_target
	end if

		' IP_address = GetHostByName(ping_target)

	message "About to do " & ping_loop_count & " executions"

	if ping_average( ping_target, ping_loop_count , average_value) Then
		message "Success with average " & average_value
	else
		message "Ping failure"
	end if 

	if downloadFilePath <> "" Then

		get_status = DownloadFile(downloadURL, downloadFilePath, Milliseconds)

		if get_status Then
			
			message "Download success " & downloadFilePath

			this_record = this_record & "," & downloadURL & "," & Milliseconds

		end if 

	end if 

	this_record = username & "," & now() & "," & average_value & "," & ping_target & "," & ping_loop_count

	if downloadFilePath <> "" Then

		get_status = DownloadFile(downloadURL, downloadFilePath, Milliseconds)

		if get_status Then
			
			message "Download success " & downloadFilePath

			this_record = this_record & "," & downloadURL & "," & Milliseconds

		end if 

	end if 

	if append_results_to_log Then
		log_status = Append_to_file(log_file_full_name, this_record)
		message "Appended to " & log_file_full_name
	end if


	Set objWMIService = nothing
		
end sub

' -------------------------------------------------------------------------- 
' -------------------------------------------------------------------------- 
'  Subroutine.....: 
'  Purpose........: 
'  Arguments......: 
'  Example........: 
'  Requirements...: 
'  Notes..........: 
' -------------------------------------------------------------------------- 
' -------------------------------------------------------------------------- 

' -------------------------------------------------------------------------- 
'  Subroutine.....: CommandLineArgs
'  Purpose........: Turn Command line arguements into variables
'  Arguments......: None
'  Example........: 
'  Requirements...: Variables need to be declared in higher scope
'  Notes..........: Plan to generalise this and move to function library
' -------------------------------------------------------------------------- 

Sub CommandLineArgs()

	dim NamedArgs 


	set NamedArgs = wscript.arguments.named

	if NamedArgs.exists("log") then

		log_file_full_name = log_file_path & "\" & scriptname & "_" & username & ".log"
		
		append_results_to_log = true
		
		message "Appending to " & log_file_full_name

	end if
	
	if NamedArgs.exists("loop") then

		ping_loop_count = NamedArgs.item("loop")

		message  "Ping Loops " & ping_loop_count
	else

		ping_loop_count = 10 ' default

		message "defaulting Ping Loops to" & ping_loop_count

	end if

	if NamedArgs.exists("ping") then

		ping_target = NamedArgs.item("ping")

		message  "Ping Target " & ping_target

	end if

	if NamedArgs.exists("download") then

		downloadURL = NamedArgs.item("download")

		message "Download URL " & downloadURL

	end if 


	if NamedArgs.exists("downloadfile") then 

		downloadFilePath = NamedArgs.item("downloadfile")

		message "Download File " & downloadFilePath

	else

		if not isNull(downloadFilePath) then ' supply a default

			downloadFilePath = scriptname & "_download.file"
		
		end if

	end if 

	if NamedArgs.exists("debug") then
	
		
	
		debuglevel = NamedArgs.item("debug")

		message "Debuglevel set to " & debuglevel

		
		
	end if 
	
end sub

' -------------------------------------------------------------------------- 
' -------------------------------------------------------------------------- 
'  Function.......: function_name
'  Purpose........: 
'  Arguments......: 
'  Returns.........:
'  Example........: 
'  Requirements...: 
'  Notes..........: 
' -------------------------------------------------------------------------- 


' ============================================================================== 
'  End  Of Script 
' ============================================================================== 
'  Description....: ' minotaur.wsf.vbs
'  
'	Lengthy Description here.
'  
'  
'

'  
'  Notes..........: 
'  
'  Customize......: 
' ============================================================================== 
'  Revised By.....: 
'  Email..........: 
'  Revision Date..: 
'  Revision Notes.: 
'  
' ============================================================================== 
' ============================================================================== 

</script>
</job>
